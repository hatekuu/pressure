{"version":3,"file":"static/js/745.39a01bd9.chunk.js","mappings":"8JAIA,MAiGA,EAjGiBA,KAAO,IAADC,EAAAC,EAAAC,EACrB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAASC,IAAcF,EAAAA,EAAAA,UAAS,KAChCG,EAAYC,IAAeJ,EAAAA,EAAAA,WAAS,IACpCK,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,OAEjDO,EAAAA,EAAAA,YAAU,KACRC,GAAW,GACV,IAEH,MAAMA,EAAYC,UAChB,IAAK,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACF,MAAMC,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,qBAC1BC,EAAe,aACfC,EAAO,CAAC,4BACRC,QAAeN,EAAIO,YAAYC,aAAaJ,KAAiBC,GACnEf,EAAgBgB,GAChBvB,EAAoB,OAANuB,QAAM,IAANA,GAAc,QAARZ,EAANY,EAAQG,cAAM,IAAAf,GAAO,QAAPC,EAAdD,EAAgBgB,aAAK,IAAAf,GAAU,QAAVC,EAArBD,EAAuBgB,gBAAQ,IAAAf,OAAzB,EAANA,EAAiCgB,MAAMC,YACrD3B,EAAwB,QAAdW,EAACS,EAAOG,cAAM,IAAAZ,GAAO,QAAPC,EAAbD,EAAea,aAAK,IAAAZ,GAAU,QAAVC,EAApBD,EAAsBa,gBAAQ,IAAAZ,OAAjB,EAAbA,EAAgCe,GAAGD,WAEhD,CAAE,MAAOE,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAgBF,OACEE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,SACvEhC,GACCiC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CI,QAAQ,aAAYH,SAAC,YAGnFF,EAAAA,EAAAA,KAAA,SACEC,UAAU,gGACVK,KAAK,SACLrB,GAAG,aACHsB,MAAO1C,EACP2C,SAAWC,GAAM3C,EAAc2C,EAAEC,OAAOH,aAI5CJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CI,QAAQ,UAASH,SAAC,SAGhFF,EAAAA,EAAAA,KAAA,SACEC,UAAU,gGACVK,KAAK,SACLrB,GAAG,UACHsB,MAAOvC,EACPwC,SAAWC,GAAMxC,EAAWwC,EAAEC,OAAOH,aAIzCP,EAAAA,EAAAA,KAAA,UACEC,UAAU,kGACVU,QA7CUnC,UAClB,IACE,MAAMO,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,qBAC1BC,EAAe,cACfC,EAAO,CAACvB,EAAYG,SACpBe,EAAIO,YAAYC,aAAaJ,KAAiBC,GACpDb,IACAJ,GAAY,EACd,CAAE,MAAO2B,GACPC,QAAQD,MAAM,yBAA0BA,EAC1C,GAmC6BI,SACtB,qBAKHC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAF,SAAA,CACiB,OAAZ9B,QAAY,IAAZA,GAAoB,QAARV,EAAZU,EAAcoB,cAAM,IAAA9B,GAAO,QAAPC,EAApBD,EAAsB+B,aAAK,IAAA9B,GAAY,QAAZC,EAA3BD,EAA6BiD,kBAAU,IAAAhD,OAA3B,EAAZA,EAAyCiD,KAAKC,IAAK,IAAAC,EAAAC,EAAA,OACxDhB,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CACGY,EAAMG,MAAM,KAAe,OAAZ7C,QAAY,IAAZA,GAAoB,QAAR2C,EAAZ3C,EAAcoB,cAAM,IAAAuB,GAAO,QAAPC,EAApBD,EAAsBtB,aAAK,IAAAuB,OAAf,EAAZA,EAA6BtB,SAASoB,EAAMI,UAFtDJ,EAAMI,KAIV,KAGJlB,EAAAA,EAAAA,KAAA,UACEC,UAAU,kGACVU,QAASA,IAAMxC,GAAY,GAAM+B,SAClC,aAKD,ECjDV,EA9CqBiB,IAAwD,IAAvD,MAAEC,EAAK,OAAEC,EAAM,UAAEC,EAAS,YAAEC,EAAW,OAAEC,GAAQL,EACrE,MACMM,EAAiB,GACjBC,EAAS,CACbC,UAAU,UAADC,OAAYJ,EAAM,SAEvBK,EAAYC,MAAMC,KAAK,CAAEC,OAAQC,KAAyB,CAACC,EAAGC,KAClEhC,EAAAA,EAAAA,MAAA,KAAewB,UAAS,UAAAC,OAAYJ,EAAM,KAAAI,OAAIQ,SAAShB,GAAS,GAAE,KAAAQ,OAAIO,EAAQV,EAAiBA,KAAkB,KAAIvB,SAAA,EAEnHF,EAAAA,EAAAA,KAAA,QACEqC,EAAGD,SAAShB,GAAS,GACrBkB,EAAIH,EAAQV,EAAiBA,KAAoB,GACjDc,WAAW,MAEXC,MAAO,CAAEC,KAAM,QAASC,SAAU,QAASxC,SAE1CiC,KAIHnC,EAAAA,EAAAA,KAAA,QACEqC,EAAGD,SAAShB,GAAO,GACnBkB,EAAGH,EAAQV,EACXL,MAAO,GACPC,OAAQI,EACRe,MAAO,CAAEC,KAAM,MAAOE,OAAQpB,EAAaqB,YAAa,OAlBpDT,KAuBV,OACEhC,EAAAA,EAAAA,MAAA,OAAKqC,MAAOd,EAAOxB,SAAA,EAEjBF,EAAAA,EAAAA,KAAA,QACEoB,MAAOA,EACPC,OAAQA,EACRiB,EAAG,EACHE,MAAO,CAAEC,KAAMnB,EAAWqB,OAAQpB,EAAaqB,YAAa,KAI7Df,IACG,E,aCtCV,MAiEA,EAjEagB,KAAO,IAADnF,EAAAC,EAAAC,EAAAkF,EAAAC,EACjB,MAAO3E,EAAcC,IAAmBN,EAAAA,EAAAA,UAAS,MAC3CiF,GAAWC,EAAAA,EAAAA,OAGjB3E,EAAAA,EAAAA,YAAU,KACRC,GAAW,IAGb,MAAMA,EAAYC,UAChB,IACE,MAAMO,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,qBAC3BH,EAAIO,aACP0D,EAAS,aAEX,MAAM7D,EAAe,aACfC,EAAO,CAAC,4BACRC,QAAeN,EAAIO,YAAYC,aAAaJ,KAAiBC,GAEnEf,EAAgBgB,EAGlB,CAAE,MAAOS,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,GAGF,OACEK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8BAA6BC,SAAC,mBAExCF,EAAAA,EAAAA,KAACvC,EAAQ,IAERW,GACA+B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,CAClB,OAAZ9B,QAAY,IAAZA,GAAoB,QAARV,EAAZU,EAAcoB,cAAM,IAAA9B,GAAQ,QAARC,EAApBD,EAAsBwF,cAAM,IAAAvF,GAAY,QAAZC,EAA5BD,EAA8BiD,kBAAU,IAAAhD,OAA5B,EAAZA,EAA0CiD,KAAKC,IAAK,IAAAC,EAAAC,EAAA,OACvDhB,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CACGY,EAAMG,MAAM,KAAe,OAAZ7C,QAAY,IAAZA,GAAoB,QAAR2C,EAAZ3C,EAAcoB,cAAM,IAAAuB,GAAQ,QAARC,EAApBD,EAAsBmC,cAAM,IAAAlC,OAAhB,EAAZA,EAA8BtB,SAASoB,EAAMI,UAFvDJ,EAAMI,KAIV,KAKAlB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8CAA6CC,UAC1DF,EAAAA,EAAAA,KAACmD,EAAY,CACX/B,MAAM,MACNC,OAAqD,IAAjC,OAAZjD,QAAY,IAAZA,GAAoB,QAAR0E,EAAZ1E,EAAcoB,cAAM,IAAAsD,GAAQ,QAARC,EAApBD,EAAsBI,cAAM,IAAAH,OAAhB,EAAZA,EAA8BrD,SAAS0D,OAC/C9B,UAAU,OACVC,YAAY,QACZC,OAAO,eAMfxB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAC,iBAElB,C","sources":["[components]/EditData.js","[components]/SvgRectangle.js","pages/home.js"],"sourcesContent":["// src/components/EditData.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst EditData = () => {\r\n  const [constValue, setConstValue] = useState('');\r\n  const [P0Value, setP0Value] = useState('');\r\n  const [isEditMode, setEditMode] = useState(false);\r\n  const [pressureData, setPressureData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const app = new Realm.App({ id: process.env.REACT_APP_REALM_APP_ID });\r\n      const functionName = 'getPresure';\r\n      const args = ['65d880bdf332ae485b63b52e'];\r\n      const result = await app.currentUser.callFunction(functionName, ...args);\r\n      setPressureData(result);\r\n      setConstValue(result?.public?.input?.jsonData?.const.toString());\r\n      setP0Value(result.public?.input?.jsonData?.P0.toString());\r\n   \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  const changeValue = async () => {\r\n    try {\r\n      const app = new Realm.App({ id: process.env.REACT_APP_REALM_APP_ID });\r\n      const functionName = 'changeValue';\r\n      const args = [constValue, P0Value];\r\n      await app.currentUser.callFunction(functionName, ...args);\r\n      fetchData();\r\n      setEditMode(false);\r\n    } catch (error) {\r\n      console.error('Error changing values:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-8 max-w-md bg-white shadow-md rounded\">\r\n      {isEditMode ? (\r\n        <>\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"constInput\">\r\n              Const:\r\n            </label>\r\n            <input\r\n              className=\"w-full px-3 py-2 border rounded-md border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n              type=\"number\"\r\n              id=\"constInput\"\r\n              value={constValue}\r\n              onChange={(e) => setConstValue(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"mb-6\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"P0Input\">\r\n              P0:\r\n            </label>\r\n            <input\r\n              className=\"w-full px-3 py-2 border rounded-md border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n              type=\"number\"\r\n              id=\"P0Input\"\r\n              value={P0Value}\r\n              onChange={(e) => setP0Value(e.target.value)}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            className=\"bg-indigo-500 text-white font-bold py-2 px-4 rounded-md focus:outline-none focus:shadow-outline\"\r\n            onClick={changeValue}\r\n          >\r\n            Save Changes\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n            {pressureData?.public?.input?.jsonSchema?.map((field) => (\r\n        <div key={field.name}>\r\n          <p>\r\n            {field.title}: {pressureData?.public?.input?.jsonData[field.name]}\r\n          </p>\r\n        </div>\r\n      ))}\r\n\r\n          <button\r\n            className=\"bg-indigo-500 text-white font-bold py-2 px-4 rounded-md focus:outline-none focus:shadow-outline\"\r\n            onClick={() => setEditMode(true)}\r\n          >\r\n            Edit\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditData;\r\n","// SvgRectangle.js\r\nimport React from 'react';\r\nconst SvgRectangle = ({ width, height, fillColor, strokeColor, rotate }) => {\r\n  const numberOfDivisions = 10; // Tổng số nấc\r\n  const divisionHeight = 250 / numberOfDivisions; // Chiều cao của mỗi nấc\r\n  const styles = {\r\n    transform: `rotate(${rotate}deg)`,\r\n  };\r\n  const divisions = Array.from({ length: numberOfDivisions + 1 }, (_, index) => (\r\n    <g key={index} transform={`rotate(${rotate} ${parseInt(width) - 10} ${index * divisionHeight + divisionHeight / 2})`}>\r\n      {/* Add Text */}\r\n      <text\r\n        x={parseInt(width) - 90} // Đặt vị trí của số để nó không bị tràn ra khỏi hình chữ nhật\r\n        y={(index * divisionHeight + divisionHeight / 2)+10}\r\n        textAnchor=\"end\"\r\n   \r\n        style={{ fill: 'black', fontSize: '13px' }}\r\n      >\r\n        {index}\r\n      </text>\r\n\r\n      {/* Add Rectangle */}\r\n      <rect\r\n        x={parseInt(width)-80}\r\n        y={index * divisionHeight}\r\n        width={20}\r\n        height={divisionHeight}\r\n        style={{ fill: 'red', stroke: strokeColor, strokeWidth: 1 }}\r\n      />\r\n    </g>\r\n  ));\r\n\r\n  return (\r\n    <svg style={styles}>\r\n      {/* First Rectangle */}\r\n      <rect\r\n        width={width}\r\n        height={height}\r\n        y={0}\r\n        style={{ fill: fillColor, stroke: strokeColor, strokeWidth: 1 }}\r\n      />\r\n\r\n      {/* Divisions */}\r\n      {divisions}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default SvgRectangle;\r\n","// src/components/Home.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport * as Realm from 'realm-web';\r\nimport EditData from '../[components]/EditData';\r\nimport SvgRectangle from '../[components]/SvgRectangle';\r\nimport { useNavigate } from 'react-router-dom';\r\nconst Home = () => {\r\n  const [pressureData, setPressureData] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  },);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const app = new Realm.App({ id: process.env.REACT_APP_REALM_APP_ID });\r\n      if (!app.currentUser) {\r\n        navigate('/pressure');\r\n      }\r\n      const functionName = 'getPresure';\r\n      const args = ['65d880bdf332ae485b63b52e'];\r\n      const result = await app.currentUser.callFunction(functionName, ...args);\r\n      \r\n      setPressureData(result);\r\n     \r\n     \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center p-8\">\r\n    <h2 className=\"text-3xl font-semibold mb-4\">Pressure Data</h2>\r\n\r\n        <EditData />\r\n\r\n        {pressureData ? (\r\n         <div className=\"border p-4 mb-4\">\r\n          {pressureData?.public?.output?.jsonSchema?.map((field) => (\r\n        <div key={field.name}>\r\n          <p>\r\n            {field.title}: {pressureData?.public?.output?.jsonData[field.name]}\r\n          </p>\r\n        </div>\r\n      ))}\r\n\r\n            {/* Centered SvgRectangle within a parent div */}\r\n        \r\n              <div className=\"flex mr-24 overflow-visible h-80 mt-0 mb-96\">\r\n                <SvgRectangle\r\n                  width=\"30%\"\r\n                  height={pressureData?.public?.output?.jsonData.level*25} // Height based on levelValue\r\n                  fillColor=\"blue\"\r\n                  strokeColor=\"black\"\r\n                  rotate=\"-180\"\r\n                />\r\n              </div>\r\n        \r\n          </div>\r\n        ) : (\r\n          <p className=\"mt-4\">Loading...</p>\r\n        )}\r\n      </div>\r\n\r\n \r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["EditData","_pressureData$public","_pressureData$public$","_pressureData$public$2","constValue","setConstValue","useState","P0Value","setP0Value","isEditMode","setEditMode","pressureData","setPressureData","useEffect","fetchData","async","_result$public","_result$public$input","_result$public$input$","_result$public2","_result$public2$input","_result$public2$input2","app","Realm","id","process","functionName","args","result","currentUser","callFunction","public","input","jsonData","const","toString","P0","error","console","_jsx","className","children","_jsxs","_Fragment","htmlFor","type","value","onChange","e","target","onClick","jsonSchema","map","field","_pressureData$public2","_pressureData$public3","title","name","_ref","width","height","fillColor","strokeColor","rotate","divisionHeight","styles","transform","concat","divisions","Array","from","length","numberOfDivisions","_","index","parseInt","x","y","textAnchor","style","fill","fontSize","stroke","strokeWidth","Home","_pressureData$public4","_pressureData$public5","navigate","useNavigate","output","SvgRectangle","level"],"sourceRoot":""}