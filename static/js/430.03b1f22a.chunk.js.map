{"version":3,"file":"static/js/430.03b1f22a.chunk.js","mappings":"uKAMA,MAoFA,EApF2BA,KACzB,MAAOC,EAAiBC,IAAoBC,EAAAA,EAAAA,WAAS,IAC9CC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,OACtDG,EAAUC,IAAeJ,EAAAA,EAAAA,UAAS,KAClCK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAAS,IAEjDO,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACYC,WAClB,MAAMC,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,qBAE1BC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAQL,EAAOM,IAAI,SACnBC,EAAUP,EAAOM,IAAI,WAE3B,GADAE,QAAQC,IAAIJ,EAAME,GACbxB,GAAoBsB,GAAUE,EAInC,GAAInB,IAAaE,EAAjB,CAIEkB,QAAQC,IAAIrB,GACd,UACQQ,EAAIc,kBAAkBC,YAAYvB,EAASiB,EAAOE,GACxDC,QAAQC,IAAI,yCACZtB,EAAsB,yCAEtBK,EAAS,YACX,CAAE,MAAOoB,GACPJ,QAAQI,MAAM,qCAAsCA,GACpDzB,EAAsB,oCACxB,CAXA,MAFEA,EAAsB,0BAaxB,EAGFwB,EAAa,GACZ,CAAC5B,EAAiBK,EAAUE,EAAiBE,IAOhD,OACEqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAE7B,KAErB8B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CG,QAAQ,WAAUF,SAAC,eAGjFF,EAAAA,EAAAA,KAAA,SACEC,UAAU,6FACVI,KAAK,WACLC,MAAO/B,EACPgC,SAAWC,GAAMhC,EAAYgC,EAAEC,OAAOH,aAI1CH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,6CAA6CG,QAAQ,kBAAiBF,SAAC,uBAGxFF,EAAAA,EAAAA,KAAA,SACEC,UAAU,6FACVI,KAAK,WACLC,MAAO7B,EACP8B,SAAWC,GAAM9B,EAAmB8B,EAAEC,OAAOH,aAGjDN,EAAAA,EAAAA,KAAA,UACEC,UAAU,+FACVS,QAnCkBC,KAExBxC,GAAiB,EAAK,EAiCW+B,SAC5B,6BAIC,C","sources":["token/rstoken.js"],"sourcesContent":["// src/components/RegisterToken.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst ResetPasswordToken = () => {\r\n  const [isButtonPressed, setButtonPressed] = useState(false);\r\n  const [confirmationStatus, setConfirmationStatus] = useState(null);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  \r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const confirmUser = async () => {\r\n      const app = new Realm.App({ id: process.env.REACT_APP_REALM_APP_ID });\r\n\r\n      const params = new URLSearchParams(window.location.search);\r\n      const token = params.get('token');\r\n      const tokenId = params.get('tokenId');\r\n      console.log(token,tokenId)\r\n      if (!isButtonPressed || !token || !tokenId) {\r\n        return; // Không chạy nếu nút chưa được nhấn hoặc không có token hoặc tokenId\r\n      }\r\n\r\n      if (password !== confirmPassword) {\r\n        setConfirmationStatus(\"Passwords do not match.\");\r\n        return;\r\n      }\r\n        console.log(password)\r\n      try {\r\n        await app.emailPasswordAuth.confirmUser(password,token, tokenId);\r\n        console.log('Resetpassword confirmed successfully!');\r\n        setConfirmationStatus('Resetpassword confirmed successfully!');\r\n        // Chuyển hướng về trang đăng nhập khi người dùng đã được xác nhận và nút đã được nhấn\r\n        navigate('/pressure');\r\n      } catch (error) {\r\n        console.error('Resetpassword confirmation failed:', error);\r\n        setConfirmationStatus('Resetpassword confirmation failed');\r\n      }\r\n    };\r\n\r\n    confirmUser();\r\n  }, [isButtonPressed, password, confirmPassword, navigate]);\r\n\r\n  const handleButtonClick = () => {\r\n    // Đặt trạng thái nút thành true khi nút được nhấn\r\n    setButtonPressed(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      <div className=\"bg-white p-8 rounded shadow-md w-96\">\r\n        <p className=\"mb-4\">{confirmationStatus}</p>\r\n        \r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"confirmPassword\">\r\n            Confirm Password:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n          onClick={handleButtonClick}\r\n        >\r\n          Confirm New Password\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPasswordToken;\r\n"],"names":["ResetPasswordToken","isButtonPressed","setButtonPressed","useState","confirmationStatus","setConfirmationStatus","password","setPassword","confirmPassword","setConfirmPassword","navigate","useNavigate","useEffect","async","app","Realm","id","process","params","URLSearchParams","window","location","search","token","get","tokenId","console","log","emailPasswordAuth","confirmUser","error","_jsx","className","children","_jsxs","htmlFor","type","value","onChange","e","target","onClick","handleButtonClick"],"sourceRoot":""}