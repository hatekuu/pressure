{"version":3,"file":"static/js/192.f4d4b3f9.chunk.js","mappings":"uKAIA,MA2DA,EA3DsBA,KACpB,MAAOC,EAAiBC,IAAoBC,EAAAA,EAAAA,WAAS,IAC9CC,EAAoBC,IAAyBF,EAAAA,EAAAA,UAAS,OACtDG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GACrCK,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,KACYC,WAClB,MAAMC,EAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,qBAE1BC,EAAS,IAAIC,gBAAgBC,OAAOC,SAASC,QAC7CC,EAAQL,EAAOM,IAAI,SACnBC,EAAUP,EAAOM,IAAI,WAE3B,GAAKD,GAAUE,GAAYtB,EAI3B,IACEM,GAAa,SACPK,EAAIY,kBAAkBC,YAAY,CAAEJ,QAAOE,YACjDG,QAAQC,IAAI,gCACZtB,EAAsB,gCAEtBG,EAAS,YACX,CAAE,MAAOoB,GACPF,QAAQE,MAAM,4BAA6BA,GAC3CvB,EAAsB,2BACxB,CAAC,QACCE,GAAa,EACf,GAGFkB,EAAa,GACZ,CAACxB,EAAiBO,IAOrB,OACEqB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sCAAqCC,SAAA,EAClDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,OAAMC,SAAE3B,KACrByB,EAAAA,EAAAA,KAAA,UACEC,UAAS,gGAAAG,OACP3B,EAAY,gCAAkC,IAEhD4B,QAbkBC,KAExBjC,GAAiB,EAAK,EAYhBkC,SAAU9B,EAAUyB,SAEnBzB,EAAY,gBAAkB,qBAG/B,C","sources":["token/registertoken.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst RegisterToken = () => {\r\n  const [isButtonPressed, setButtonPressed] = useState(false);\r\n  const [confirmationStatus, setConfirmationStatus] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const confirmUser = async () => {\r\n      const app = new Realm.App({ id: process.env.REACT_APP_REALM_APP_ID });\r\n\r\n      const params = new URLSearchParams(window.location.search);\r\n      const token = params.get('token');\r\n      const tokenId = params.get('tokenId');\r\n\r\n      if (!token || !tokenId || !isButtonPressed) {\r\n        return; // Không chạy nếu không có token hoặc tokenId hoặc nút chưa được nhấn\r\n      }\r\n\r\n      try {\r\n        setIsLoading(true);\r\n        await app.emailPasswordAuth.confirmUser({ token, tokenId });\r\n        console.log('User confirmed successfully!');\r\n        setConfirmationStatus('User confirmed successfully!');\r\n        // Chuyển hướng về trang đăng nhập khi người dùng đã được xác nhận và nút đã được nhấn\r\n        navigate('/pressure');\r\n      } catch (error) {\r\n        console.error('User confirmation failed:', error);\r\n        setConfirmationStatus('User confirmation failed');\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    confirmUser();\r\n  }, [isButtonPressed, navigate]);\r\n\r\n  const handleButtonClick = () => {\r\n    // Đặt trạng thái nút thành true khi nút được nhấn\r\n    setButtonPressed(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      <div className=\"bg-white p-8 rounded shadow-md w-96\">\r\n        <p className=\"mb-4\">{confirmationStatus}</p>\r\n        <button\r\n          className={`bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\r\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n          onClick={handleButtonClick}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Confirming...' : 'Confirm User'}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterToken;\r\n"],"names":["RegisterToken","isButtonPressed","setButtonPressed","useState","confirmationStatus","setConfirmationStatus","isLoading","setIsLoading","navigate","useNavigate","useEffect","async","app","Realm","id","process","params","URLSearchParams","window","location","search","token","get","tokenId","emailPasswordAuth","confirmUser","console","log","error","_jsx","className","children","_jsxs","concat","onClick","handleButtonClick","disabled"],"sourceRoot":""}