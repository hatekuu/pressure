{"version":3,"file":"static/js/782.d7a345eb.chunk.js","mappings":"gLAIA,MA0HA,EA1HcA,KAEZ,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,GACrCK,GAAWC,EAAAA,EAAAA,MACXC,GAAMC,EAAAA,EAAAA,UAAQ,IAAM,IAAIC,EAAAA,GAAU,CAAEC,GAAIC,sBAAuC,KAGtFC,EAAAA,EAAAA,YAAU,KACTC,GAAW,GACV,IAIH,MAAMA,EAAYC,UACd,IAEEC,QAAQC,IAAIC,OAAOC,SAASC,MACxBZ,EAAIa,aACNf,EAAS,iBAKb,CAAE,MAAOgB,GACPN,QAAQM,MAAM,uBAAwBA,EACxC,GAoCF,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gDAA+CC,SAAA,EAC5DF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,sCAAqCC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,0BAAyBC,SAAC,WACxCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6CAA6CG,QAAQ,QAAOF,SAAC,YAG9EC,EAAAA,EAAAA,KAAA,SACEF,UAAU,6FACVI,KAAK,OACLC,MAAO9B,EACP+B,SAAWC,GAAM/B,EAAS+B,EAAEC,OAAOH,aAGvCN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAA,SAAOF,UAAU,6CAA6CG,QAAQ,WAAUF,SAAC,eAGjFC,EAAAA,EAAAA,KAAA,SACEF,UAAU,6FACVI,KAAK,WACLC,MAAO3B,EACP4B,SAAWC,GAAM5B,EAAY4B,EAAEC,OAAOH,aAG1CH,EAAAA,EAAAA,KAAA,UACEF,UAAS,gGAAAS,OACP7B,EAAY,gCAAkC,IAEhD8B,QAhEmBnB,UACzB,IAAIX,EAAJ,CAKAC,GAAa,GAEb,IACE,MAAM8B,EAAczB,EAAAA,GAAkB0B,cAAcrC,EAAOG,SACrDM,EAAI6B,MAAMF,GAChB7B,EAAS,iBACX,CAAE,MAAOgB,GACPN,QAAQM,MAAM,gBAAiBA,EAEjC,CAAC,QACCjB,GAAa,EACf,CAdA,CAcA,EAgDMiC,SAAUlC,EAAUqB,SAEnBrB,EAAY,gBAAkB,WAEjCmB,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAMC,SAAA,CAAC,yBACIC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,GAAG,qBAAqBhB,UAAU,kBAAiBC,SAAC,iBAElFF,EAAAA,EAAAA,MAAA,KAAGC,UAAU,OAAMC,SAAA,CAAC,0BACKC,EAAAA,EAAAA,KAACa,EAAAA,GAAI,CAACC,GAAG,uBAAuBhB,UAAU,kBAAiBC,SAAC,uBAEvFC,EAAAA,EAAAA,KAAA,KAAGF,UAAU,kDAAiDC,SAAC,UAC/DC,EAAAA,EAAAA,KAAA,UACIF,UAAS,gGAAAS,OACP7B,EAAY,gCAAkC,IAEhD8B,QA7DiBnB,UACvB,IAGE,MAAM0B,EAAc,uEACdN,EAAczB,EAAAA,GAAkBgC,OAAO,CAAED,sBAExCjC,EAAI6B,MAAMF,GAGjB7B,EAAS,iBACX,CAAE,MAAOgB,GACPN,QAAQM,MAAMA,EAChB,GAiDMgB,SAAUlC,EAAUqB,SACrB,gCAGHC,EAAAA,EAAAA,KAAA,YAII,C","sources":["pages/user/login.js"],"sourcesContent":["import React, { useEffect, useState,useMemo } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport * as Realm from 'realm-web';\r\n\r\nconst Login = () => {\r\n\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const app = useMemo(() => new Realm.App({ id: process.env.REACT_APP_REALM_APP_ID }), []);\r\n\r\n  \r\n useEffect(() => {\r\n  fetchData();\r\n}, []); // Empty dependency array means it runs once on mount\r\n\r\n\r\n\r\nconst fetchData = async () => {\r\n    try {\r\n\r\n      console.log(window.location.href)\r\n      if (app.currentUser) {\r\n        navigate('/pressure/home');\r\n      }\r\n    \r\n     \r\n     \r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n  };\r\n  const loginEmailPassword = async () => {\r\n    if (isLoading) {\r\n      return; // Tránh nhấn nút nhiều lần trong khi đang xử lý\r\n    }\r\n   \r\n  \r\n    setIsLoading(true);\r\n    \r\n    try {\r\n      const credentials = Realm.Credentials.emailPassword(email, password);\r\n      await app.logIn(credentials);\r\n      navigate('/pressure/home');\r\n    } catch (error) {\r\n      console.error('Login failed:', error);\r\n      // Handle errors, you might want to display an error message to the user\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const handleGoogleAuth = async () => {\r\n    try {\r\n      // The redirect URL should be on the same domain as this app and\r\n      // specified in the auth provider configuration.\r\n      const redirectUrl = \"https://sites.google.com/view/cpkd/pressure/api/auth/callback/google\";\r\n      const credentials = Realm.Credentials.google({ redirectUrl });\r\n      // Calling logIn() opens a Google authentication screen in a new window.\r\n       await app.logIn(credentials);\r\n      // The logIn() promise will not resolve until you call `handleAuthRedirect()`\r\n      // from the new window after the user has successfully authenticated.\r\n      navigate('/pressure/home');\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"min-h-screen flex items-center justify-center\">\r\n      <div className=\"bg-white p-8 rounded shadow-md w-96\">\r\n        <h2 className=\"text-2xl font-bold mb-4\">Login</h2>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"email\">\r\n            Email:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"text\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"mb-4\">\r\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\r\n            Password:\r\n          </label>\r\n          <input\r\n            className=\"w-full px-3 py-2 border rounded border-gray-300 focus:outline-none focus:border-indigo-500\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button\r\n          className={`bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\r\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n          onClick={loginEmailPassword}\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? 'Logging In...' : 'Login'}\r\n        </button>\r\n        <p className=\"mt-4\">\r\n           Have not an account? <Link to=\"/pressure/register\" className=\"text-indigo-500\">Register</Link>\r\n        </p>\r\n        <p className=\"mt-4\">\r\n           Forgot your password? <Link to=\"/pressure/rspassword\" className=\"text-indigo-500\">Reset Password</Link>\r\n        </p>\r\n      <p className=\"mt-4 underline mb-4 items-center justify-center\">  Or</p>\r\n      <button\r\n          className={`bg-indigo-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ${\r\n            isLoading ? 'opacity-50 cursor-not-allowed' : ''\r\n          }`}\r\n          onClick={handleGoogleAuth}\r\n          disabled={isLoading}\r\n        >    Login with google  </button>\r\n      </div>\r\n\r\n      <div>\r\n   \r\n    \r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["Login","email","setEmail","useState","password","setPassword","isLoading","setIsLoading","navigate","useNavigate","app","useMemo","Realm","id","process","useEffect","fetchData","async","console","log","window","location","href","currentUser","error","_jsxs","className","children","_jsx","htmlFor","type","value","onChange","e","target","concat","onClick","credentials","emailPassword","logIn","disabled","Link","to","redirectUrl","google"],"sourceRoot":""}