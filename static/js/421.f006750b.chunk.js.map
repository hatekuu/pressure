{"version":3,"file":"static/js/421.f006750b.chunk.js","mappings":"uLAOA,MAAMA,EAASC,EAAAA,EAAEC,OAAO,CACtBC,KAAMF,EAAAA,EAAEG,SAASC,IAAI,EAAG,CAAEC,QAAS,qBACnCC,MAAON,EAAAA,EAAEG,SAASG,QAAQC,WAC1BC,QAASR,EAAAA,EAAEG,SAASM,MACpBC,QAASV,EAAAA,EAAEG,WAGPQ,EAAiB,CACrB,CAAEC,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,WAAYC,MAAO,YAC5B,CAAED,MAAO,MAAOC,MAAO,QAGnBC,EAAa,CACjB,CAAEZ,KAAM,OAAQW,MAAO,OAAQE,KAAM,QACrC,CAAEb,KAAM,QAASW,MAAO,QAASE,KAAM,SACvC,CAAEb,KAAM,UAAWW,MAAO,UAAWE,KAAM,QAC3C,CAAEb,KAAM,UAAWW,MAAO,UAAWE,KAAM,SAAUC,QAASL,IAwDhE,EArDmBM,IAA4B,IAA3B,OAAEC,EAAM,KAAEC,EAAO,CAAC,GAAGF,EACvC,MAAM,SAAEG,EAAQ,QAAEC,EAAO,aAAEC,EAAY,UAAEC,IAAcC,EAAAA,EAAAA,IAAQ,CAC7DC,cAAeN,EACfO,UAAUC,EAAAA,EAAAA,GAAY5B,MAElB,OAAE6B,GAAWL,EAMnB,OACEM,EAAAA,EAAAA,KAAA,QAAMC,SAAUR,GALES,IAClBb,EAAOa,EAAW,IAIuBC,UACvCC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0DAAyDF,SAAA,CACrElB,EAAWqB,KAAKC,IAAK,IAAAC,EAAAC,EAAA,OACpBL,EAAAA,EAAAA,MAAA,OAAsBC,UAAU,OAAMF,SAAA,EACpCH,EAAAA,EAAAA,KAAA,SAAOK,UAAU,6CAA6CK,QAASH,EAAMlC,KAAK8B,SAC/EI,EAAMvB,QAEO,WAAfuB,EAAMrB,MACNc,EAAAA,EAAAA,KAACW,EAAAA,GAAM,IACHJ,EACJF,UAAU,SACVtB,MAAOD,EAAe8B,MAAKC,IAAA,IAAAC,EAAA,IAAC,MAAE/B,GAAO8B,EAAA,OAAK9B,KAA8B,QAAzB+B,EAAMtB,EAAQe,EAAMlC,aAAK,IAAAyC,OAAA,EAAnBA,EAAqB/B,MAAM,IAChFgC,SAAWC,IAAc,IAAAC,EAAA,OAAwB,QAAxBA,EAAKzB,EAAQe,EAAMlC,aAAK,IAAA4C,OAAA,EAAnBA,EAAqBF,SAASC,EAAejC,MAAM,EACjFI,QAASoB,EAAMpB,WAIda,EAAAA,EAAAA,KAAA,SACEK,UAAS,sCAAAa,OAAwCnB,EAAOQ,EAAMlC,MAAQ,iBAAmB,sBACrFkB,EAASgB,EAAMlC,MACnBa,KAAMqB,EAAMrB,QAGG,QAAlBsB,EAAAT,EAAOQ,EAAMlC,aAAK,IAAAmC,OAAA,EAAlBA,EAAoBhC,WACnBwB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,4BAA2BF,SAAoB,QAApBM,EAAEV,EAAOQ,EAAMlC,aAAK,IAAAoC,OAAA,EAAlBA,EAAoBjC,YArBxD+B,EAAMlC,KAuBV,KAER2B,EAAAA,EAAAA,KAAA,OAAKK,UAAU,OAAMF,UACnBH,EAAAA,EAAAA,KAAA,UACEK,UAAU,6GACVnB,KAAK,SAAQiB,SACd,eAKA,ECtDX,EAlBagB,KAWTf,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACAH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,iBACFH,EAAAA,EAAAA,KAACoB,EAAU,CAAC/B,OANEgC,IAChBC,QAAQC,IAAI,CAACF,UAAQ,EAKiB/B,KAZ5B,CACVjB,KAAK,WACLI,MAAM,cACNE,QAAQ,mBACRE,QAAQ,W","sources":["pages/test/formConfig.js","pages/test/form.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { useForm,  } from 'react-hook-form';\r\n\r\nimport Select from 'react-select';\r\nimport { z } from 'zod';\r\nimport { zodResolver } from '@hookform/resolvers/zod';\r\n\r\nconst schema = z.object({\r\n  name: z.string().min(1, { message: 'Name is required' }),\r\n  email: z.string().email().optional(),\r\n  website: z.string().url(),\r\n  country: z.string(),\r\n});\r\n\r\nconst countryOptions = [\r\n  { value: 'asgard', label: 'Asgard' },\r\n  { value: 'scotland', label: 'Scotland' },\r\n  { value: 'usa', label: 'USA' },\r\n];\r\n\r\nconst formFields = [\r\n  { name: 'name', label: 'Name', type: 'text' },\r\n  { name: 'email', label: 'Email', type: 'email' },\r\n  { name: 'website', label: 'Website', type: 'text' },\r\n  { name: 'country', label: 'Country', type: 'select', options: countryOptions },\r\n];\r\n\r\nconst SimpleForm = ({ onSave, user = {} }) => {\r\n  const { register, control, handleSubmit, formState } = useForm({\r\n    defaultValues: user,\r\n    resolver: zodResolver(schema),\r\n  });\r\n  const { errors } = formState;\r\n\r\n  const handleSave = (formValues) => {\r\n    onSave(formValues);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleSave)}>\r\n      <div className=\"max-w-md mx-auto mt-8 p-6 bg-white rounded-md shadow-md\">\r\n        {formFields.map((field) => (\r\n          <div key={field.name} className=\"mb-4\">\r\n            <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor={field.name}>\r\n              {field.label}\r\n            </label>\r\n            {field.type === 'select' ? (\r\n             <Select\r\n             {...field}\r\n             className=\"w-full\"\r\n             value={countryOptions.find(({ value }) => value === (control[field.name]?.value))}\r\n             onChange={(selectedOption) => control[field.name]?.onChange(selectedOption.value)}\r\n             options={field.options}\r\n           />\r\n           \r\n            ) : (\r\n              <input\r\n                className={`w-full px-3 py-2 border rounded-md ${errors[field.name] ? 'border-red-500' : 'border-gray-300'}`}\r\n                {...register(field.name)}\r\n                type={field.type}\r\n              />\r\n            )}\r\n            {errors[field.name]?.message && (\r\n              <p className=\"text-red-500 text-xs mt-1\">{errors[field.name]?.message}</p>\r\n            )}\r\n          </div>\r\n        ))}\r\n        <div className=\"mt-6\">\r\n          <button\r\n            className=\"px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:shadow-outline-blue\"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SimpleForm;\r\n","// App.jsx\r\nimport React from 'react';\r\nimport SimpleForm from './formConfig'; // Đảm bảo đường dẫn đúng\r\n\r\nconst Form = () => {\r\n  const user ={\r\n    name:\"She-Hulk\",\r\n    email:\"jen@hlk.com\",\r\n    website:\"www.she-hulk.com\",\r\n    country:\"usa\"\r\n  }\r\n  const handeSave =(values)=>{\r\n    console.log({values})\r\n  }\r\n  return (\r\n    <div >\r\n    <h1> React Form</h1>\r\n      <SimpleForm onSave={handeSave} {...{user}} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"],"names":["schema","z","object","name","string","min","message","email","optional","website","url","country","countryOptions","value","label","formFields","type","options","_ref","onSave","user","register","control","handleSubmit","formState","useForm","defaultValues","resolver","zodResolver","errors","_jsx","onSubmit","formValues","children","_jsxs","className","map","field","_errors$field$name","_errors$field$name2","htmlFor","Select","find","_ref2","_control$field$name","onChange","selectedOption","_control$field$name2","concat","Form","SimpleForm","values","console","log"],"sourceRoot":""}